# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI/CD Golang Deploy to AWS EC2 with Rollback

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Golang
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.0'

    - name: Build Go Project
      run: |
        go mod tidy
        go build -o todolist-backend ./cmd/main.go
        echo "✅ Build successful"

    - name: Deploy via SSH to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_KEY }}
        script: |
          echo "🚀 Deploying code to EC2..."
          cd /home/ubuntu/todolist-backend || true

          # Backup old version
          if [ -f todolist-backend ]; then
            mv todolist-backend todolist-backend.bak
            echo "🗂️ Backup old version successful"
          fi

          # Upload new file
          sudo rm -f todolist-backend
          sudo mv ~/todolist-backend ./
          sudo chmod +x todolist-backend
          sudo systemctl restart todolist-backend.service

          # Check service running
          sleep 3
          if systemctl is-active --quiet todolist-backend.service; then
            echo "✅ Deploy Successful"
          else
            echo "❌ Deploy Fail, rollback..."
            if [ -f todolist-backend.bak ]; then
              mv todolist-backend.bak todolist-backend
              sudo systemctl restart todolist-backend.service
              echo "🔄 Rollback to old version"
            else
              echo "🚫 No backup version found!"
            fi
            exit 1
          fi
